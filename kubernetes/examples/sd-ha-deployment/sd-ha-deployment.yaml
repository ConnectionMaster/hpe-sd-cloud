apiVersion: apps/v1
kind: Deployment
metadata:
  name: oracle18xe-deployment
  labels:
    app: oracle18xe
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: oracle18xe
  template:
    metadata:
      labels:
        app: oracle18xe
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/oracledb-18xe-sa
        imagePullPolicy: Always
        name: oracle18xe
        env:
        - name: ORACLE_PWD #The Oracle Database SYS, SYSTEM and PDB_ADMIN password
          value: secret
        ports:
        - containerPort: 8080 #port of Oracle Application Expres
          name: 8080tcp01
        - containerPort: 1521 #port to connect to the Oracle Database
          name: 1521tcp01
        volumeMounts:
        - mountPath: /dev/shm  #Adding of Linux shared memory
          name: dshm
        readinessProbe:
          exec: 
            command:
              - /opt/oracle/checkDBStatus.sh
          initialDelaySeconds: 60
          periodSeconds: 15
      volumes:
      - name: dshm #Adding of Linux shared memory
        emptyDir:
          medium: Memory
---
apiVersion: v1
kind: Service
metadata:
  name: oracle18xe-nodeport
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: 1521tcp01 #port to connect to the Oracle Database
    nodePort: 30021
    port: 1521
    protocol: TCP
    targetPort: 1521
  - name: 8080tcp01 #port of Oracle Application Expres
    nodePort: 30080
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: oracle18xe
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdsp-primary-deployment
  labels:
    app: deployment-default-sdsp1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-default-sdsp1
  template:
    metadata:
      labels:
        app: deployment-default-sdsp1
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-sp
        imagePullPolicy: IfNotPresent
        name: sdsp1
        env:
        - name: SDCONF_activator_db_vendor
          value: Oracle
        - name: SDCONF_activator_db_hostname
          value: $(ORACLE18XE_NODEPORT_SERVICE_HOST)  #Referencing at the IP of the Oracle container in the cluster
        - name: SDCONF_activator_db_instance
          value: XE
        - name: SDCONF_activator_db_user
          value: hpsa
        - name: SDCONF_activator_db_password
          value: secret
        ports:
        - containerPort: 8080
          name: 8080tcp02
        livenessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh 
          initialDelaySeconds: 240
          periodSeconds: 15
        readinessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 180
          periodSeconds: 15
      initContainers:
       - name: init-db
         image: busybox
         command: ['sh', '-c', 'until echo -e \035\nquit | telnet $(ORACLE18XE_NODEPORT_SERVICE_HOST) 1521; do echo waiting for oracle18xe; sleep 15; done; echo oracle connection open']
---
apiVersion: v1
kind: Service
metadata:
  name: sdsp1-nodeport
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: 8080tcp02
    nodePort: 32514
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: deployment-default-sdsp1
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdui1-deployment
  labels:
    app: deployment-default-sdui1
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-default-sdui1
  template:
    metadata:
      labels:
        app: deployment-default-sdui1
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-ui
        imagePullPolicy: IfNotPresent
        name: sdui1
        env:
        - name: SDCONF_sdui_async_host
          value: $(SDUI1_NODEPORT_SERVICE_HOST)
        - name: SDCONF_sdui_provision_host
          value: $(SDSP1_NODEPORT_SERVICE_HOST)
        - name: SDCONF_sdui_provision_password
          value: admin001
        - name: SDCONF_sdui_provision_port
          value: $(SDSP1_NODEPORT_SERVICE_PORT_8080TCP02)
        - name: SDCONF_sdui_provision_protocol
          value: http
        - name: SDCONF_sdui_provision_tenant
          value: UOC_SD
        - name: SDCONF_sdui_provision_use_real_user
          value: "no"
        - name: SDCONF_sdui_provision_username
          value: admin
        ports:
        - containerPort: 3000
          name: 3000tcp01
        livenessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh 
          initialDelaySeconds: 200
          periodSeconds: 10
        readinessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 60
          periodSeconds: 10
      initContainers:
      - name: init-sp1
        image: busybox
        command: ['sh', '-c', 'until echo -e \035\nquit | telnet $(SDSP1_NODEPORT_SERVICE_HOST) 8080; do echo waiting for sdsp1; sleep 5; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: sdui1-nodeport
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: 3000tcp01
    nodePort: 32516
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: deployment-default-sdui1
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdsp-secondary-deployment
  labels:
    app: deployment-default-sdsp2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-default-sdsp2
  template:
    metadata:
      labels:
        app: deployment-default-sdsp2
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-sp
        imagePullPolicy: IfNotPresent
        name: sdsp2
        env:
        - name: SDCONF_activator_db_vendor
          value: Oracle
        - name: SDCONF_activator_db_hostname
          value: $(ORACLE18XE_NODEPORT_SERVICE_HOST)  #Referencing at the IP of the Oracle container in the cluster
        - name: SDCONF_activator_db_instance
          value: XE
        - name: SDCONF_activator_db_user
          value: hpsa
        - name: SDCONF_activator_db_password
          value: secret
        ports:
        - containerPort: 8080
          name: 8080tcp03
        livenessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh 
          initialDelaySeconds: 240
          periodSeconds: 15
        readinessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 180
          periodSeconds: 15
      initContainers:
       - name: init-sdsp1
         image: busybox
         command: ['sh', '-c', 'until echo -e \035\nquit | telnet $(SDSP1_NODEPORT_SERVICE_HOST) 8080; do echo waiting for sdsp1; sleep 15; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: sdsp2-nodeport
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: 8080tcp03
    nodePort: 32515
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: deployment-default-sdsp2
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sdui2-deployment
  labels:
    app: deployment-default-sdui2
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: deployment-default-sdui2
  template:
    metadata:
      labels:
        app: deployment-default-sdui2
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-ui
        imagePullPolicy: IfNotPresent
        name: sdui2
        env:
        - name: SDCONF_sdui_async_host
          value: $(SDUI2_NODEPORT_SERVICE_HOST)
        - name: SDCONF_sdui_provision_host
          value: $(SDSP2_NODEPORT_SERVICE_HOST)
        - name: SDCONF_sdui_provision_password
          value: admin001
        - name: SDCONF_sdui_provision_port
          value: $(SDSP2_NODEPORT_SERVICE_PORT_8080TCP03)
        - name: SDCONF_sdui_provision_protocol
          value: http
        - name: SDCONF_sdui_provision_tenant
          value: UOC_SD
        - name: SDCONF_sdui_provision_use_real_user
          value: "no"
        - name: SDCONF_sdui_provision_username
          value: admin
        ports:
        - containerPort: 3000
          name: 3000tcp02
        livenessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 200
          periodSeconds: 10
        readinessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 60
          periodSeconds: 10
      initContainers:
      - name: init-sp2
        image: busybox
        command: ['sh', '-c', 'until echo -e \035\nquit | telnet $(SDSP2_NODEPORT_SERVICE_HOST) 8080; do echo waiting for sdsp2; sleep 5; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: sdui2-nodeport
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: 3000tcp02
    nodePort: 32517
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: deployment-default-sdui2
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
