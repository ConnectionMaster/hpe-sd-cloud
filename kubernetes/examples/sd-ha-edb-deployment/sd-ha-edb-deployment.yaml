apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: edb-data-pvc
  namespace: servicedirector
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: v1
kind: Secret
metadata:
  name: logintoken
  namespace: servicedirector
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJjb250YWluZXJzLmVudGVycHJpc2VkYi5jb20iOiB7CgkJCSJhdXRoIjogIlpXNXlhWEYxWldjNmJUaGxSWGt6U0hJMGFWVklja2RGV2c9PSIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJCSJVc2VyLUFnZW50IjogIkRvY2tlci1DbGllbnQvMTkuMDMuMiAobGludXgpIgoJfQp9

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: edb-initconf
  namespace: servicedirector
data:
  postgresql.conf.in: default_with_rowids = on

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprisedb-deployment
  labels:
    app: enterprisedb
  namespace: servicedirector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enterprisedb
  template:
    metadata:
      labels:
        app: enterprisedb
    spec:
      containers:
      - image: containers.enterprisedb.com/edb/edb-as-lite:v11
        imagePullPolicy: IfNotPresent
        name: enterprisedb
        env:
        - name: DATABASE_NAME #EDB Database name
          value: "sa"
        - name: PGPORT #EDB port number
          value: "5432"
        - name: ENTERPRISEDB_PASSWORD #EDB admin user password
          value: "secret"
        - name: ACCEPT_EULA #EDB EULA acceptance terms
          value: "Yes" 
        ports:
        - containerPort: 5444 #port to connect to EDB
          name: 5444tcp01
        readinessProbe:
            exec:
              command:
              - /var/lib/edb/testIsReady.sh
            initialDelaySeconds: 60
            timeoutSeconds: 10 
        livenessProbe:
            exec:
              command:
              - /var/lib/edb/testIsHealthy.sh
            initialDelaySeconds: 300 
            timeoutSeconds: 60 
        volumeMounts:
          - name: edb-data 
            mountPath: /edbvolume
          - name: edb-initconf
            mountPath: /initconf/postgresql.conf.in
            subPath: postgresql.conf.in
      volumes:
      - name: edb-data 
        persistentVolumeClaim:
          claimName: edb-data-pvc
      - name: edb-initconf
        configMap:
          name: edb-initconf
      imagePullSecrets:
      - name: logintoken

---

apiVersion: v1
kind: Service
metadata:
  name: enterprisedb-nodeport
  namespace: servicedirector
spec:
  ports:
  - name: 5444tcp01 #port to connect to EDB
    nodePort: 30021
    port: 5444
    protocol: TCP
    targetPort: 5432
  selector:
    app: enterprisedb
  type: NodePort

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sd-sp
  labels:
    app: sd-sp
  namespace: servicedirector
spec:
  replicas: 2
  serviceName: sd-sp
  selector:
    matchLabels:
      app: sd-sp
  template:
    metadata:
      labels:
        app: sd-sp
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-sp
        imagePullPolicy: IfNotPresent
        name: sdsp
        env:
        - name: SDCONF_activator_db_vendor
          value: "EnterpriseDB"
        - name: SDCONF_activator_db_hostname
          value: $(ENTERPRISEDB_NODEPORT_SERVICE_HOST)
        - name: SDCONF_activator_db_instance
          value: "sa"
        - name: SDCONF_activator_db_user
          value: "enterprisedb"
        - name: SDCONF_activator_db_password
          value: "secret"
        ports:
        - containerPort: 8080
          name: 8080tcp01
        livenessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 360
          periodSeconds: 15
        readinessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 180
          periodSeconds: 15
      initContainers:
      - name: init-db
        image: busybox
        command: ['sh', '-c', 'until echo -e \035\nquit | telnet $(ENTERPRISEDB_NODEPORT_SERVICE_HOST) 5444; do echo waiting for enterprisedb; sleep 15; done; echo EDB connection open']

---

apiVersion: v1
kind: Service
metadata:
  name: sdsp-nodeport
  namespace: servicedirector
spec:
  ports:
  - name: 8080tcp01
    nodePort: 32514
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: sd-sp
  sessionAffinity: ClientIP
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sd-ui
  labels:
    app: sd-ui
  namespace: servicedirector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sd-ui
  template:
    metadata:
      labels:
        app: sd-ui
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-ui
        imagePullPolicy: IfNotPresent
        name: sdui
        env:
        - name: SDCONF_sdui_async_host
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SDCONF_sdui_provision_host
          value: $SDSP_NODEPORT_SERVICE_HOST
        - name: SDCONF_sdui_provision_password
          value: "admin001"
        - name: SDCONF_sdui_provision_port
          value: $SDSP_NODEPORT_SERVICE_PORT
        - name: SDCONF_sdui_provision_protocol
          value: "http"
        - name: SDCONF_sdui_provision_tenant
          value: "UOC_SD"
        - name: SDCONF_sdui_provision_use_real_user
          value: "no"
        - name: SDCONF_sdui_provision_username
          value: "admin"
        - name: SDCONF_uoc_couchdb_host
          value: sduicouchdb-couchdb
        - name: SDCONF_uoc_couchdb_admin_username
          value: admin
        - name: SDCONF_uoc_couchdb_admin_password
          value: admin
        ports:
        - containerPort: 3000
          name: 3000tcp01
        livenessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 200
          periodSeconds: 10
        readinessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 60
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: sdui-nodeport
  namespace: servicedirector
spec:
  ports:
  - name: 3000tcp01
    nodePort: 32516
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: sd-ui
  sessionAffinity: ClientIP
  type: NodePort
