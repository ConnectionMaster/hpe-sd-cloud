apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sd-sp
  labels:
    app: sd-sp
  namespace: servicedirector
spec:
  replicas: 2
  serviceName: sd-sp
  selector:
    matchLabels:
      app: sd-sp
  template:
    metadata:
      labels:
        app: sd-sp
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-sp
        imagePullPolicy: IfNotPresent
        name: sd-sp
        env:
        - name: SDCONF_activator_db_vendor
          value: EnterpriseDB
        - name: SDCONF_activator_db_hostname
          value: $(ENTERPRISEDB_NODEPORT_SERVICE_HOST)
        - name: SDCONF_activator_db_instance
          value: sa
        - name: SDCONF_activator_db_user
          value: enterprisedb
        - name: SDCONF_activator_db_password
          value: secret
        - name: SDCONF_asr_kafka_brokers      # Only used if SDCONF_install_asr is yes and SDCONF_asr_node is no
          value: kafka:9092
        - name: SDCONF_asr_zookeeper_nodes    # Only used if SDCONF_install_asr is yes and SDCONF_asr_node is no
          value: kafka-zookeeper:2181
        - name: SDCONF_install_asr
          value: "yes"
        ports:
        - containerPort: 8080
          name: 8080tcp01
        livenessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 360
          periodSeconds: 15
        readinessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 180
          periodSeconds: 15
      initContainers:
      - name: init-db
        image: busybox
        command: ['sh', '-c', 'until echo -e \035\nquit | telnet $(ENTERPRISEDB_NODEPORT_SERVICE_HOST) 5444; do echo waiting for enterprisedb; sleep 15; done; echo EDB connection open']

---

apiVersion: v1
kind: Service
metadata:
  name: sd-sp-nodeport
  namespace: servicedirector
spec:
  ports:
  - name: 8080tcp01
    nodePort: 32518
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: sd-sp
  sessionAffinity: ClientIP
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sd-ui
  labels:
    app: sd-ui
  namespace: servicedirector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sd-ui
  template:
    metadata:
      labels:
        app: sd-ui
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-ui
        imagePullPolicy: IfNotPresent
        name: sd-ui
        env:
        - name: SDCONF_sdui_install_assurance
          value: "yes"
        - name: SDCONF_sdui_provision_host
          value: sd-sp-nodeport
        - name: SDCONF_sdui_async_host
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SDCONF_uoc_couchdb_host
          value: sduicouchdb-couchdb
        - name: SDCONF_uoc_couchdb_admin_username
          value: admin
        - name: SDCONF_uoc_couchdb_admin_password
          value: admin
        ports:
        - containerPort: 3000
          name: 3000tcp01
        livenessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 200
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 60
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: sd-ui-nodeport
  namespace: servicedirector
spec:
  ports:
  - name: 3000tcp01
    nodePort: 32519
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: sd-ui
  sessionAffinity: ClientIP
  type: NodePort

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: sd-snmp-adapter
  labels:
    app: sd-snmp-adapter
  namespace: servicedirector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sd-snmp-adapter
  template:
    metadata:
      labels:
        app: sd-snmp-adapter
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-cl-adapter-snmp
        imagePullPolicy: IfNotPresent
        name: sd-snmp-adapter
        env:
        - name: SDCONF_asr_adapters_bootstrap_servers
          value: kafka:9092
        ports:
        - containerPort: 162
          protocol: UDP
          name: 162udp01
        readinessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 30
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: sd-snmp-adapter-nodeport
  namespace: servicedirector
spec:
  ports:
  - name: 162udp01
    nodePort: 32162
    port: 162
    protocol: UDP
    targetPort: 162
  selector:
    app: sd-snmp-adapter
  sessionAffinity: ClientIP
  type: NodePort
