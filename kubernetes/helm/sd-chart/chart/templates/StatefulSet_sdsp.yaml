{{- if  (gt (.Values.statefulset_sdsp.replicaCount | int) 0)  }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Values.statefulset_sdsp.name}} 
  labels:
    app: {{.Values.statefulset_sdsp.app}}
  namespace: {{.Values.namespace}}
spec:
  replicas: {{ .Values.statefulset_sdsp.replicaCount }}
  serviceName: {{.Values.statefulset_sdsp.servicename}}   
  selector:
    matchLabels:
      app: {{.Values.statefulset_sdsp.app}}
  template:
    metadata:
      labels:
        app: {{.Values.statefulset_sdsp.app}}
    spec:
      containers:
      {{- if and (.Values.statefulset_sdsp.image.tag) (.Values.statefulset_sdsp.image.repository)}}
      - image: "{{ .Values.statefulset_sdsp.image.repository }}{{ .Values.statefulset_sdsp.image.name }}:{{ .Values.statefulset_sdsp.image.tag }}"
      {{- end }}
      {{- if and (.Values.statefulset_sdsp.image.tag) (not .Values.statefulset_sdsp.image.repository)}}
      - image: "{{ .Values.sdimage.repository }}{{ .Values.statefulset_sdsp.image.name }}:{{ .Values.statefulset_sdsp.image.tag }}"
      {{- end }}
      {{- if and (not .Values.statefulset_sdsp.image.tag) (.Values.statefulset_sdsp.image.repository)}}
      - image: "{{ .Values.statefulset_sdsp.image.repository }}{{ .Values.statefulset_sdsp.image.name }}:{{ .Values.sdimage.version }}"      
      {{- end }}
      {{- if and (not .Values.statefulset_sdsp.image.tag) (not .Values.statefulset_sdsp.image.repository)}}
      - image: "{{ .Values.sdimage.repository }}{{ .Values.statefulset_sdsp.image.name }}:{{ .Values.sdimage.version }}"      
      {{- end }}
        imagePullPolicy: {{ .Values.sdimage.pullPolicy }}
        name: {{.Values.statefulset_sdsp.servicename}}
        env:
        - name: SDCONF_activator_db_vendor
          value: "{{ .Values.sdimage.env.SDCONF_activator_db_vendor }}"
        - name: SDCONF_activator_db_hostname
          value: "{{ .Values.sdimage.env.SDCONF_activator_db_hostname }}"
        - name: SDCONF_activator_db_instance
          value: "{{ .Values.sdimage.env.SDCONF_activator_db_instance }}"
        - name: SDCONF_activator_db_user
          value: "{{ .Values.sdimage.env.SDCONF_activator_db_user }}"
        - name: SDCONF_activator_db_password
          value: "{{ .Values.sdimage.env.SDCONF_activator_db_password }}"
      {{- if (.Values.sdimage.install_assurance )  }}          
        - name: SDCONF_install_asr
          value: "yes"      
        - name: SDCONF_asr_node
          value: "no"             
      {{- end }}          
        ports:
        - containerPort: {{ .Values.statefulset_sdsp.ports.containerPort }}
          name: {{ .Values.statefulset_sdsp.ports.name }}
        livenessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh 
          initialDelaySeconds: 360
          periodSeconds: 15
        readinessProbe:
          exec: 
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 180
          periodSeconds: 15
      initContainers:
      - name: init-db
        image: busybox
        command: ['sh', '-c', 'until echo -e \035\nquit | telnet {{ .Values.sdimage.env.SDCONF_activator_db_hostname }} 5444; do echo waiting for enterprisedb; sleep 15; done; echo EDB Postgres connection open']
{{- end }}            