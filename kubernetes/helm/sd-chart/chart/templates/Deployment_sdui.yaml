{{- if and (gt (.Values.deployment_sdui_cl.replicaCount | int) 0) (.Values.sdimage.install_assurance ) }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.deployment_sdui_cl.name}}
  labels:
    app: {{.Values.deployment_sdui_cl.app}}
  namespace: {{.Values.namespace}}
spec:
  replicas: {{ .Values.deployment_sdui_cl.replicaCount }}
  selector:
    matchLabels:
      app: {{.Values.deployment_sdui_cl.app}}
  template:
    metadata:
      labels:
        app: {{.Values.deployment_sdui_cl.app}}
    spec:
      containers:
      - image: "{{ .Values.deployment_sdui_cl.image.repository | default .Values.sdimage.repository }}/{{ .Values.deployment_sdui_cl.image.name }}:{{ .Values.deployment_sdui_cl.image.tag | default .Values.sdimage.version }}"
        imagePullPolicy: {{ .Values.sdimage.pullPolicy }}
        name: {{.Values.deployment_sdui_cl.name}}
        env:
        - name: SDCONF_sdui_async_host
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SDCONF_sdui_provision_host
          value: "{{ .Values.service_sdcl.name }}"
        - name: SDCONF_sdui_provision_port
          value: "{{ .Values.service_sdcl.port }}"
        - name: SDCONF_sdui_provision_password
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_sdui_provision_password }}"
        - name: SDCONF_sdui_provision_protocol
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_sdui_provision_protocol }}"
        - name: SDCONF_sdui_provision_tenant
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_sdui_provision_tenant }}"
        - name: SDCONF_sdui_provision_use_real_user
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_sdui_provision_use_real_user }}"
        - name: SDCONF_sdui_provision_username
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_sdui_provision_username }}"
        - name: SDCONF_sdui_assurance_host
          value: "{{ .Values.service_sdcl.name }}"
        - name: SDCONF_sdui_install_assurance
          value: "{{ .Values.sdimage.install_assurance }}"
        - name: SDCONF_uoc_couchdb_host
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_uoc_couchdb_host }}"
        - name: SDCONF_uoc_couchdb_admin_username
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_uoc_couchdb_admin_username }}"
        - name: SDCONF_uoc_couchdb_admin_password
          value: "{{ .Values.deployment_sdui_cl.env.SDCONF_uoc_couchdb_admin_password }}"          
        - name: SDCONF_sdui_redis
          value: "yes"
        - name: SDCONF_sdui_redis_host
          value: "{{ .Values.redis.fullnameOverride }}{{ printf "-master" }}"
        - name: SDCONF_sdui_redis_port
          value: "{{ .Values.redis.redisPort }}"
        - name: SDCONF_sdui_redis_password
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.redis.existingSecret }}"
              key: "{{ .Values.redis.existingSecretPasswordKey }}"
        ports:
        - containerPort: {{ .Values.deployment_sdui_cl.ports.containerPort }}
          name: {{ .Values.deployment_sdui_cl.ports.name }}
        livenessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: {{ .Values.deployment_sdui_cl.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment_sdui_cl.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: {{ .Values.deployment_sdui_cl.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment_sdui_cl.readinessProbe.periodSeconds }}
      imagePullSecrets:
      - name: "{{ .Values.redis.existingSecret }}"      
{{- end }}
{{- if and (gt (.Values.deployment_sdui.replicaCount | int) 0) (not .Values.sdimage.install_assurance ) }}
---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.deployment_sdui.name}}
  labels:
    app: {{.Values.deployment_sdui.app}}
  namespace: {{.Values.namespace}}
spec:
  replicas: {{ .Values.deployment_sdui.replicaCount }}
  selector:
    matchLabels:
      app: {{.Values.deployment_sdui.app}}
  template:
    metadata:
      labels:
        app: {{.Values.deployment_sdui.app}}
    spec:
      containers:
      - image: "{{ .Values.deployment_sdui.image.repository | default .Values.sdimage.repository }}/{{ .Values.deployment_sdui.image.name }}:{{ .Values.deployment_sdui.image.tag | default .Values.sdimage.version }}"
        imagePullPolicy: {{ .Values.sdimage.pullPolicy }}
        name: {{.Values.deployment_sdui.name}}
        env:
        - name: SDCONF_sdui_async_host
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: SDCONF_sdui_provision_host
          value: "{{ .Values.service_sdsp.name }}"
        - name: SDCONF_sdui_provision_port
          value: "{{ .Values.service_sdsp.port }}"
        - name: SDCONF_sdui_provision_password
          value: "{{ .Values.deployment_sdui.env.SDCONF_sdui_provision_password }}"
        - name: SDCONF_sdui_provision_protocol
          value: "{{ .Values.deployment_sdui.env.SDCONF_sdui_provision_protocol }}"
        - name: SDCONF_sdui_provision_tenant
          value: "{{ .Values.deployment_sdui.env.SDCONF_sdui_provision_tenant }}"
        - name: SDCONF_sdui_provision_use_real_user
          value: "{{ .Values.deployment_sdui.env.SDCONF_sdui_provision_use_real_user }}"
        - name: SDCONF_sdui_provision_username
          value: "{{ .Values.deployment_sdui.env.SDCONF_sdui_provision_username }}"
        - name: SDCONF_sdui_install_assurance
          value: "{{ .Values.sdimage.install_assurance }}"
        - name: SDCONF_uoc_couchdb_host
          value: "{{ .Values.deployment_sdui.env.SDCONF_uoc_couchdb_host }}"
        - name: SDCONF_uoc_couchdb_admin_username
          value: "{{ .Values.deployment_sdui.env.SDCONF_uoc_couchdb_admin_username }}"
        - name: SDCONF_uoc_couchdb_admin_password
          value: "{{ .Values.deployment_sdui.env.SDCONF_uoc_couchdb_admin_password }}"
        - name: SDCONF_sdui_redis
          value: "yes"
        - name: SDCONF_sdui_redis_host
          value: "{{ .Values.redis.fullnameOverride }}{{ printf "-master" }}"
        - name: SDCONF_sdui_redis_port
          value: "{{ .Values.redis.redisPort }}"
        - name: SDCONF_sdui_redis_password
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.redis.existingSecret }}"
              key: "{{ .Values.redis.existingSecretPasswordKey }}"          
        ports:
        - containerPort: {{ .Values.deployment_sdui.ports.containerPort }}
          name: {{ .Values.deployment_sdui.ports.name }}
        livenessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: {{ .Values.deployment_sdui.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment_sdui.livenessProbe.periodSeconds }}
        readinessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: {{ .Values.deployment_sdui.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.deployment_sdui.readinessProbe.periodSeconds }}
      imagePullSecrets:
      - name: "{{ .Values.redis.existingSecret }}"            
{{- end }}