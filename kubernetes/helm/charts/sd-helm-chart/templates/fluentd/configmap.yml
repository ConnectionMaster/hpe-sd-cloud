{{- if and (or (eq (include "prometheus.enabled" .) "true") (eq (include "efk.enabled" .) "true")) (.Values.efk.fluentd.enabled) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: {{.Release.Namespace}}
data:
  fluentd.conf: |
    # Ignore fluentd own events
    <label @FLUENT_LOG>
      <match fluent.*>
        @type stdout
      </match>
    </label>
    <system>
      log_level debug
    </system>

    <source>
      @type http
      bind 0.0.0.0
      port 9880
    </source>

{{- if eq (include "prometheus.enabled" .) "true" }}
    <source>
      @type prometheus
      bind 0.0.0.0
      port 9144
      metrics_path /metrics
    </source>
{{- end }}

{{- if eq (include "efk.enabled" .) "true" }}
    <source>
      @type tail
      path /jboss-log/server.log
      tag wildfly
      <parse>
        @type regexp
        expression /(?<timestamp>(\d{4})-(\d{2})-(\d{2}) (\d{2})\:(\d{2})\:(\d{2})\,(\d{3}))\s+(?<loglevel>\S+)\s+\[(?<logger>[^\]]+)\]\s+\((?<thread>.+?(?=\)))\)\s+(?<message>.*)/
      </parse>
      time_key timestamp
    </source>

    <source>
      @type tail
      path /sa-log/mwfm_active.log.xml
      <parse>
        @type multiline
        format_firstline /^<LogEntry level/
        format1 /<LogEntry level="(?<loglevel>.?|[^<]+)" no="(?<no>[^"]+)" >\n/
        format2 /^\s+<HostName>(?<hostname>.?|[^<]+)</HostName>\n/
        format3 /^\s+<Time>(?<timestamp>.?|[^<]+)</Time>\n/
        format4 /^\s+<Module>(?<module>.?|[^<]+)</Module>\n/
        format5 /^\s+<Part>(?<part>.?|[^<]+)</Part>\n/
        format6 /^\s+<Component>(?<component>.?|[^<]+)</Component>\n/
        format7 /^\s+<Topic>(?<topic>.?|[^<]+)</Topic>\n/
        format8 /^\s+<Thread>(?<thread>.?|[^<]+)</Thread>\n/
        format9 /^\s+<Message>(?<message>.?|[^<]+)</Message>\n/
        format10 /</LogEntry>/
      </parse>
      tag sa_mwfm
      time_key timestamp
    </source>

    <source>
      @type tail
      path /sa-log/resmgr_active.log.xml
      <parse>
        @type multiline
        format_firstline /^<LogEntry level/
        format1 /<LogEntry level="(?<loglevel>.?|[^<]+)" no="(?<no>[^"]+)" >\n/
        format2 /^\s+<HostName>(?<hostname>.?|[^<]+)</HostName>\n/
        format3 /^\s+<Time>(?<timestamp>.?|[^<]+)</Time>\n/
        format4 /^\s+<Module>(?<module>.?|[^<]+)</Module>\n/
        format5 /^\s+<Part>(?<part>.?|[^<]+)</Part>\n/
        format6 /^\s+<Component>(?<component>.?|[^<]+)</Component>\n/
        format7 /^\s+<Topic>(?<topic>.?|[^<]+)</Topic>\n/
        format8 /^\s+<Thread>(?<thread>.?|[^<]+)</Thread>\n/
        format9 /^\s+<Message>(?<message>.?|[^<]+)</Message>\n/
        format10 /</LogEntry>/
      </parse>
      tag sa_resmgr
      time_key timestamp
    </source>


    <source>
      @type tail
      path /snmp-log/SNMPGenericAdapter_1.log
      <parse>
        @type multiline
        format_firstline /^<LogEntry level/
        format1 /<LogEntry level="(?<loglevel>.?|[^<]+)" no="(?<no>[^"]+)" >\n/
        format2 /^\s+<HostName>(?<hostname>.?|[^<]+)</HostName>\n/
        format3 /^\s+<Time>(?<timestamp>.?|[^<]+)</Time>\n/
        format4 /^\s+<Module>(?<module>.?|[^<]+)</Module>\n/
        format5 /^\s+<Part>(?<part>.?|[^<]+)</Part>\n/
        format6 /^\s+<Component>(?<component>.?|[^<]+)</Component>\n/
        format7 /^\s+<Topic>(?<topic>.?|[^<]+)</Topic>\n/
        format8 /^\s+<Thread>(?<thread>.?|[^<]+)</Thread>\n/
        format9 /^\s+<Message>(?<message>.?|[^<]+)</Message>\n/
        format10 /</LogEntry>/
      </parse>
      tag snmp
      time_key timestamp
    </source>

    <source>
    @type syslog
    port 5140
    bind 127.0.0.1
    tag healthcheck
    <parse>
      message_format rfc5424
    </parse>
    </source>

{{- end }}

{{- if eq (include "efk.enabled" .) "true" }}

    <match healthcheck>
      @type elasticsearch
    {{- if (.Values.efk.fluentd.elasticserver) }}
      host "{{.Values.efk.fluentd.elasticserver }}"
    {{- else }}
      host "elasticsearch-service.{{ template "monitoring.namespace" . }}.svc.cluster.local"
    {{- end }}
      port {{.Values.efk.fluentd.elasticport}}
      logstash_format true
      logstash_prefix healthcheck
    </match>


    # Send the logs to EFK
    <match wildfly>
      @type elasticsearch
    {{- if (.Values.efk.fluentd.elasticserver) }}
      host "{{.Values.efk.fluentd.elasticserver }}"
    {{- else }}
      host "elasticsearch-service.{{ template "monitoring.namespace" . }}.svc.cluster.local"
    {{- end }}
      port {{.Values.efk.fluentd.elasticport}}
      logstash_format true
      logstash_prefix wildfly
      reload_connections false
      reconnect_on_error true
      reload_on_failure false
      flatten_hashes true
      flatten_hashes_separator "_"
      suppress_type_name true
      @log_level "debug"
      <buffer>
        @type "file"
        path "/opt/bitnami/fluentd/logs/buffers/fluentd-wildfly.buffer"
        flush_at_shutdown true
        flush_mode interval
        flush_interval 5s
        flush_thread_count 2
        chunk_limit_size 10MB
        chunk_limit_records 10000
      </buffer>
    </match>


    <match sa_mwfm>
      @type elasticsearch
    {{- if (.Values.efk.fluentd.elasticserver) }}
      host "{{.Values.efk.fluentd.elasticserver }}"
    {{- else }}
      host "elasticsearch-service.{{ template "monitoring.namespace" . }}.svc.cluster.local"
    {{- end }}
      port {{.Values.efk.fluentd.elasticport}}
      logstash_format true
      logstash_prefix sa_mwfm
      reload_connections false
      reconnect_on_error true
      reload_on_failure false
      flatten_hashes true
      flatten_hashes_separator "_"
      suppress_type_name true
      @log_level "debug"
      <buffer>
        @type "file"
        path "/opt/bitnami/fluentd/logs/buffers/fluentd-mwfm.buffer"
        flush_at_shutdown true
        flush_mode interval
        flush_interval 5s
        flush_thread_count 2
        chunk_limit_size 10MB
        chunk_limit_records 10000
      </buffer>
    </match>


    <match sa_resmgr>
      @type elasticsearch
    {{- if (.Values.efk.fluentd.elasticserver) }}
      host "{{.Values.efk.fluentd.elasticserver }}"
    {{- else }}
      host "elasticsearch-service.{{ template "monitoring.namespace" . }}.svc.cluster.local"
    {{- end }}
      port {{.Values.efk.fluentd.elasticport}}
      logstash_format true
      logstash_prefix sa_resmgr
      reload_connections false
      reconnect_on_error true
      reload_on_failure false
      flatten_hashes true
      flatten_hashes_separator "_"
      suppress_type_name true
      @log_level "debug"
      <buffer>
        @type "file"
        path "/opt/bitnami/fluentd/logs/buffers/fluentd-resmgr.buffer"
        flush_at_shutdown true
        flush_mode interval
        flush_interval 5s
        flush_thread_count 2
        chunk_limit_size 10MB
        chunk_limit_records 10000
      </buffer>
    </match>

    <match snmp>
      @type elasticsearch
    {{- if (.Values.efk.fluentd.elasticserver) }}
      host "{{.Values.efk.fluentd.elasticserver }}"
    {{- else }}
      host "elasticsearch-service.{{ template "monitoring.namespace" . }}.svc.cluster.local"
    {{- end }}
      port {{.Values.efk.fluentd.elasticport}}
      logstash_format true
      logstash_prefix sa_snmp
      reload_connections false
      reconnect_on_error true
      reload_on_failure false
      flatten_hashes true
      flatten_hashes_separator "_"
      suppress_type_name true
      @log_level "debug"
      <buffer>
        @type "file"
        path "/opt/bitnami/fluentd/logs/buffers/fluentd-snmp.buffer"
        flush_at_shutdown true
        flush_mode interval
        flush_interval 5s
        flush_thread_count 2
        chunk_limit_size 10MB
        chunk_limit_records 10000
      </buffer>
    </match>

{{- end }}

{{- end }}

---
{{- if and (eq (include "efk.enabled" .) "true") (.Values.efk.fluentd.enabled) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config-ui
  namespace: {{.Release.Namespace}}
data:
  fluentd.conf: |
    # Ignore fluentd own events
    <label @FLUENT_LOG>
      <match fluent.*>
        @type stdout
      </match>
    </label>
    <system>
      log_level debug
    </system>

    <source>
      @type http
      bind 0.0.0.0
      port 9880
    </source>

    <source>
      @type tail
      path /uoc-log/server.log
      tag uoc
      <parse>
        @type regexp
        expression /\[(?<timestamp>(\d{4})-(\d{2})-(\d{2})T(\d{2})\:(\d{2})\:(\d{2})\.(\d{3}))\]\s+\[(?<loglevel>\S+)]\s+(?<logger>\S+)\s+\-\s+(?<message>.*)/
      </parse>
      time_key timestamp
    </source>

    <match fluentd.healthcheck>
      @type stdout
    </match>

    <match uoc>
      @type elasticsearch
    {{- if (.Values.efk.fluentd.elasticserver) }}
      host "{{.Values.efk.fluentd.elasticserver }}"
    {{- else }}
      host "elasticsearch-service.{{ template "monitoring.namespace" . }}.svc.cluster.local"
    {{- end }}
      port {{.Values.efk.fluentd.elasticport}}
      logstash_format true
      logstash_prefix uoc
      reload_connections false
      reconnect_on_error true
      reload_on_failure false
      flatten_hashes true
      flatten_hashes_separator "_"
      suppress_type_name true
      @log_level "debug"
      <buffer>
        @type "file"
        path "/uoc-log/fluentd-es.buffer"
        flush_at_shutdown true
        flush_mode interval
        flush_interval 5s
        flush_thread_count 2
        chunk_limit_size 10MB
        chunk_limit_records 10000
      </buffer>
    </match>

{{- end }}

---
{{- if and (or (eq (include "prometheus.enabled" .) "true") (eq (include "efk.enabled" .) "true")) (.Values.efk.fluentd.enabled) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config-hc
  namespace: {{.Release.Namespace}}
data:
  fluentd.conf: |
    # Ignore fluentd own events
    <label @FLUENT_LOG>
      <match fluent.*>
        @type stdout
      </match>
    </label>
    <system>
      log_level debug
    </system>

    <source>
      @type http
      bind 0.0.0.0
      port 9880
    </source>

{{- if eq (include "prometheus.enabled" .) "true" }}
    <source>
      @type prometheus
      bind 0.0.0.0
      port 9144
      metrics_path /metrics
    </source>
{{- end }}

    <source>
    @type syslog
    port 5140
    protocol_type tcp
    bind 127.0.0.1
    tag healthcheck
    <transport tcp>
    </transport>
    <parse>
      @type syslog
      parser_type string
      with_priority true
      message_format rfc5424
    </parse>
    </source>

    <match healthcheck.**>
      @type elasticsearch
    {{- if (.Values.efk.fluentd.elasticserver) }}
      host "{{.Values.efk.fluentd.elasticserver }}"
    {{- else }}
      host "elasticsearch-service.{{ template "monitoring.namespace" . }}.svc.cluster.local"
    {{- end }}
      port {{.Values.efk.fluentd.elasticport}}
      logstash_format true
      logstash_prefix healthcheck
    </match>

{{- end }}