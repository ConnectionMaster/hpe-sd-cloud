{{- if  (eq (include "prometheus.enabled" .) "true")  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: sd-kube-state-metrics
    app.kubernetes.io/version: v1.8.0
  name: sd-kube-state-metrics
  namespace: {{ template "monitoring.namespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: sd-kube-state-metrics
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sd-kube-state-metrics
        app.kubernetes.io/version: v1.8.0
        {{- range $key, $val := .Values.prometheus.podLabels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
    spec:
      containers:
      - image: quay.io/coreos/kube-state-metrics:v1.9.8
        imagePullPolicy: {{ include "resolve.imagePullPolicy" (dict "top" . "specificPullPolicy" .Values.prometheus.pullPolicy) }}
        startupProbe:
          httpGet:
            path: /healthz
            port: 8080
          failureThreshold: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          timeoutSeconds: 5
        name: sd-kube-state-metrics
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 8081
          name: telemetry
        readinessProbe:
          httpGet:
            path: /
            port: 8081
          timeoutSeconds: 5
        resources:
          requests:
            memory: {{.Values.prometheus.ksm.memoryrequested}}
            cpu: {{.Values.prometheus.ksm.cpurequested}}
          limits:
{{- if (.Values.prometheus.ksm.memorylimit ) }}
            memory: {{ .Values.prometheus.ksm.memorylimit }}
{{- end }}
{{- if (.Values.prometheus.ksm.cpulimit ) }}
            cpu: {{ .Values.prometheus.ksm.cpulimit }}
{{- end }}
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: sd-kube-state-metrics
{{- end }}