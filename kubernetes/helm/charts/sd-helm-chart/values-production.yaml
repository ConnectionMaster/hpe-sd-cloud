# The parameters declared in this production-values.yaml file overwrite the values.yaml defined in sd-helm chart.
# For full parameter list and reference - please visit: 
#         https://github.com/HewlettPackard/hpe-sd-cloud/blob/master/kubernetes/helm/charts/sd-helm-chart/values.yaml
# And for documentation please visit: 
#         https://github.com/HewlettPackard/hpe-sd-cloud/blob/master/kubernetes/helm/charts/README.md

sdimage:
##  environment variables to control parameters in ActivatorConfig
  env:
    SDCONF_activator_conf_activation_max_threads:
    SDCONF_activator_conf_activation_min_threads:
    SDCONF_activator_conf_jvm_max_memory: 7168M
    SDCONF_activator_conf_jvm_min_memory: 2048M
    SDCONF_activator_conf_pool_defaultdb_max:
    SDCONF_activator_conf_pool_defaultdb_min:
    SDCONF_activator_conf_pool_inventorydb_max:
    SDCONF_activator_conf_pool_inventorydb_min:
    SDCONF_activator_conf_pool_mwfmdb_max:
    SDCONF_activator_conf_pool_mwfmdb_min:
    SDCONF_activator_conf_pool_resmgrdb_max:
    SDCONF_activator_conf_pool_resmgrdb_min:
    SDCONF_activator_conf_pool_servicedb_max:
    SDCONF_activator_conf_pool_servicedb_min:
    SDCONF_activator_conf_pool_uidb_max:
    SDCONF_activator_conf_pool_uidb_min:
  cpulimit: 8
  cpurequested: 3
  memorylimit: "8192Mi"
  memoryrequested: "2048Mi"
  ## sd pod affinity/anti-affinity
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/component"
                operator: In
                values:
                - sd
          topologyKey: "kubernetes.io/hostname"

statefulset_sdsp:
  replicaCount: 2

statefulset_sdcl:
  replicaCount: 2

service_sdsp:
  servicetype: ClusterIP

service_sdcl:
  servicetype: ClusterIP

sdui_image:
  cpulimit: 4
  cpurequested: 1
  replicaCount: 2
  memorylimit: "4000Mi"
  memoryrequested: "500Mi"  
  ## sd-ui pod affinity/anti-affinity  
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: "app"
                operator: In
                values:
                - sd-ui
          topologyKey: "kubernetes.io/hostname"

service_sdui:
  servicetype: ClusterIP

service_sdsnmp:
  servicetype: ClusterIP

kafka:
  replicaCount: 3
  fullnameOverride: "kafka-service"
  defaultReplicationFactor: 3
  offsetsTopicReplicationFactor: 3
  transactionStateLogMinIsr: 3
  persistence:
    enabled: true
    storageClass: "sdstorageclass"
  resources:
    requests:
      memory: 256Mi
## We prevent Kubernetes from assigning more than one Pod per Node to better tolerate node failures
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: "app.kubernetes.io/component"
                operator: In
                values:
                - kafka
          topologyKey: "kubernetes.io/hostname"
  zookeeper:
    replicaCount: 3
    fullnameOverride: "zookeeper-service"
    image:
      pullPolicy: Always
    persistence:
      enabled: true
      storageClass: "sdstorageclass"
    securityContext:
      enabled: false
      fsGroup: 1001
      runAsUser: 1001
    metrics:
      enabled: false
    resources:
      limits:
        cpu: 400m
        memory: 1Gi
      requests:
        memory: 256Mi
        cpu: 250m
## We prevent Kubernetes from assigning more than one Pod per Node to better tolerate node failures
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/component"
                  operator: In
                  values:
                  - zookeeper
            topologyKey: "kubernetes.io/hostname"

couchdb:
  clusterSize: 3
  persistentVolume:
    enabled: true
    storageClass: "sdstorageclass"
## We prevent Kubernetes from assigning more than one Pod per Node to better tolerate node failures
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - key: "app"
                operator: In
                values:
                - couchdb
          topologyKey: "kubernetes.io/hostname"
# Kubernetes local cluster domain. This is used to generate FQDNs.
  dns:
    clusterDomainSuffix: cluster.local

redis:
  cluster:
    enabled: true
    slaveCount: 2
  fullnameOverride: "redis"
  redisPort: 6379
  existingSecret: redis-password
  existingSecretPasswordKey: password
  image:
    pullPolicy: Always
  metrics:
    enabled: false
  ## Redis pod Security Context
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001
  master:
    persistence:
      enabled: true
      storageClass: "sdstorageclass"
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
    ## We prevent Kubernetes from assigning more than one Pod per Node to better tolerate node failures
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - redis
            topologyKey: "kubernetes.io/hostname"
  slave:
    persistence:
      enabled: true
      storageClass: "sdstorageclass"
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
    ## We prevent Kubernetes from assigning more than one Pod per Node to better tolerate node failures
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - redis
            topologyKey: "kubernetes.io/hostname"

prometheus:
  servicetype: ClusterIP
  grafanaservicetype: ClusterIP
  grafana:
## We prevent Kubernetes from assigning more than one Pod per Node to better tolerate node failures
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - grafana
            topologyKey: "kubernetes.io/hostname"

  sqlexporter:
  ##  A JDBC URL must be set for the data_source_name pointing to you database pod's service or external DB entry point
  ##  This is an example of a postgress DB setup as a pod in the SD namespace:
  ##  'postgres://sa:secret@postgres-nodeport.sd.svc.cluster.local:5432/sa?sslmode=disable'
    data_source_name:
    memoryrequested: "50Mi"
    cpurequested: "100m"
    memorylimit:
    cpulimit:

efk:
  elastic:
    replicas: 3
    persistence: true
    persistentSize: 5Gi
    esJavaOpts: "-Xmx1g -Xms1g"
    networkHost: "0.0.0.0"
    masterService: "elasticsearch"
    servicetype: ClusterIP
    memoryrequested: "1.3Gi"
    cpurequested: "1000m"
    storageClass: "sdstorageclass"
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app"
                  operator: In
                  values:
                  - elasticsearch
            topologyKey: "kubernetes.io/hostname"
  kibana:
    servicetype: ClusterIP
    cpurequested: "1000m"
    memorylimit: "2Gi"
