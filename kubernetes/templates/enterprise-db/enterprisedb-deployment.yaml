
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: edb-data-pvc
  namespace: sd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

apiVersion: v1
kind: Secret
metadata:
  name: logintoken
  namespace: sd
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJjb250YWluZXJzLmVudGVycHJpc2VkYi5jb20iOiB7CgkJCSJhdXRoIjogIlpXNXlhWEYxWldjNmJUaGxSWGt6U0hJMGFWVklja2RGV2c9PSIKCQl9Cgl9LAoJIkh0dHBIZWFkZXJzIjogewoJCSJVc2VyLUFnZW50IjogIkRvY2tlci1DbGllbnQvMTkuMDMuMiAobGludXgpIgoJfQp9

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: edb-initconf
  namespace: sd
data:
  postgresql.conf.in: default_with_rowids = on

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: enterprisedb-deployment
  labels:
    app: enterprisedb
  namespace: sd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enterprisedb
  template:
    metadata:
      labels:
        app: enterprisedb
    spec:
      containers:
      - image: containers.enterprisedb.com/edb/edb-as-lite:v11
        imagePullPolicy: IfNotPresent
        name: enterprisedb
        env:
        - name: DATABASE_NAME #EDB Database name
          value: "sa"
        - name: PGPORT #EDB port number
          value: "5432"
        - name: ENTERPRISEDB_PASSWORD #EDB admin user password
          value: "secret"
        - name: ACCEPT_EULA #EDB EULA acceptance terms
          value: "Yes"
        ports:
        - containerPort: 5444 #port to connect to EDB
          name: 5444tcp01
        readinessProbe:
            exec:
              command:
              - /var/lib/edb/testIsReady.sh
            initialDelaySeconds: 60
            timeoutSeconds: 10
        livenessProbe:
            exec:
              command:
              - /var/lib/edb/testIsHealthy.sh
            initialDelaySeconds: 300
            timeoutSeconds: 60
        volumeMounts:
          - name: edb-data
            mountPath: /edbvolume
          - name: edb-initconf
            mountPath: /initconf/postgresql.conf.in
            subPath: postgresql.conf.in
      volumes:
      - name: edb-data
        persistentVolumeClaim:
          claimName: edb-data-pvc
      - name: edb-initconf
        configMap:
          name: edb-initconf
      imagePullSecrets:
      - name: logintoken

---
apiVersion: v1
kind: Service
metadata:
  name: enterprisedb-nodeport
  namespace: sd
spec:
  ports:
  - name: 5444tcp01 #port to connect to EDB
    nodePort: 30021
    port: 5444
    protocol: TCP
    targetPort: 5432
  selector:
    app: enterprisedb
  type: NodePort
