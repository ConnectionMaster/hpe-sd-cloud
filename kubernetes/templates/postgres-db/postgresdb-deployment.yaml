apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
  namespace: sd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  labels:
    app: postgres
  namespace: sd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - image: postgres:13-alpine
          imagePullPolicy: IfNotPresent
          name: postgres
          env:
            - name: POSTGRES_USER
              value: sa
            - name: POSTGRES_PASSWORD
              value: secret
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"              
          ports:
            - containerPort: 5432
              name: 5432tcp01
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "sa" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 10
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "sa" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-nodeport
  namespace: sd
spec:
  ports:
    - name: 5432tcp01
      port: 5432
      nodePort: 30021
      protocol: TCP
      targetPort: 5432
  selector:
    app: postgres
  type: NodePort
