apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sd-sp
  labels:
    app: sd-sp
  namespace: servicedirector
spec:
  replicas: 1
  serviceName: sd-sp
  selector:
    matchLabels:
      app: sd-sp
  template:
    metadata:
      labels:
        app: sd-sp
    spec:
      containers:
      - image: hub.docker.hpecorp.net/cms-sd/sd-sp
        imagePullPolicy: IfNotPresent
        name: sd-sp
        env:
        - name: SDCONF_activator_db_vendor
          value: Oracle
        - name: SDCONF_activator_db_hostname
          value: $(ORACLE18XE_NODEPORT_SERVICE_HOST)    # Change to ip address, if not using an oracle xe in kubernetes.
        - name: SDCONF_activator_db_instance
          value: XE
        - name: SDCONF_activator_db_user
          value: hpsa
        - name: SDCONF_activator_db_password
          value: secret
        - name: SDCONF_asr_kafka_brokers                # Only used if SDCONF_install_asr is yes and SDCONF_asr_node is no
          value: kafka:9092
        - name: SDCONF_asr_zookeeper_nodes              # Only used if SDCONF_install_asr is yes and SDCONF_asr_node is no
          value: kafka-zookeeper:2181
        - name: SDCONF_install_asr
          value: "yes"
        ports:
        - containerPort: 8080
          name: 8080tcp01
        livenessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 360
          periodSeconds: 15
        readinessProbe:
          exec:
            command:
              - /docker/healthcheck.sh
          initialDelaySeconds: 180
          periodSeconds: 15
      initContainers:
        - name: init-db
          image: busybox
          command: ['sh', '-c', 'until echo -e \035\nquit | telnet $(ORACLE18XE_NODEPORT_SERVICE_HOST) 1521; do echo waiting for oracle18xe; sleep 15; done; echo oracle connection open']

---

apiVersion: v1
kind: Service
metadata:
  name: sd-sp-nodeport
  namespace: servicedirector
spec:
  ports:
  - name: 8080tcp01
    nodePort: 32514
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: sd-sp
  sessionAffinity: ClientIP
  type: NodePort
