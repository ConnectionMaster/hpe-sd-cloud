input { 
  beats {
    port => 5044
  }
} 


filter {
  if [type] == "wildfly" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{NOTSPACE:loglevel}\s+\[(?<logger>[^\]]+)\] \((?<thread>.+?(?=\) ))\) %{GREEDYDATA:message}" }
      overwrite => [ "timestamp", "message" ]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
  if [type] == "sa_mwfm" or [type] == "sa_resmgr" {
    xml {
      source => "message"
      store_xml => false
        xpath => [
          "//LogEntry/@level", "loglevel",
          "//LogEntry/Time/text()", "timestamp",
          "//LogEntry/Module/text()", "logger",
          "//LogEntry/Part/text()", "part",
          "//LogEntry/Component/text()", "component",
          "//LogEntry/Topic/text()", "topic",
          "//LogEntry/Thread/text()", "thread",
          "//LogEntry/ID/text()", "jobid",
          "//LogEntry/Message/text()", "xmlmessage"
        ]
    }
    mutate {
      rename => {
        "xmlmessage" => "message"
      }
      gsub => [
        "loglevel", "WARNING", "WARN",
        "loglevel", "INFORMATIVE", "INFO",
        "loglevel", "DEBUG2", "TRACE",
        "timestamp", "," , ""
      ]
    }
  
    date {
      match => [ "[timestamp][0]" , "MMM dd yyyy HH:mm:ss a" ]
      locale => "en"
      target => timestamp
    }   
  }
  if [type] == "uoc" {
    grok {
      match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] \[%{NOTSPACE:loglevel}\]\s+%{NOTSPACE:logger} - %{GREEDYDATA:message}" }
      overwrite => [ "timestamp", "message" ]
    }
    date {
      match => [ "timestamp", "ISO8601" ]
    }
  }
}  


output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    sniffing => false
    manage_template => false
    index => "%{[type]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }
}