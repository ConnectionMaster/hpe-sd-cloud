---
- hosts: localhost
  vars:
    activator_create_db_access: yes
    activator_ac_extra_args: -waitForDB {{activator_wait_for_db_timeout}}
    activator_ac_offline: yes
    activator_ac_undeploy: no
  roles:
    - sd-defaults
    - asr-defaults
    - activator-config
  tasks:
    - name: Migrate database if necessary
      command: >
        /bin/bash patchmanager pm dbinstallUnattended
          -migrateDatabase
          -saDbUser {{activator_db_user}}
          -saDbPassword {{activator_db_password}}
          -waitForDB {{activator_wait_for_db_timeout}}
          {% if activator_rolling_upgrade %}
          -rollingUpgrade
          {% endif %}
      args:
        chdir: "{{activator_patch_dest}}/bin"
    - include_role: name=activator-config
      vars:
        activator_ac_offline: no
    - file:
        path: /docker/.kafka_config
        state: touch
      when: install_asr|bool and asr_node|bool and install_asr_kafka|bool
    - name: Create wait-for-db script
      copy:
        dest: /docker/scripts/startup/01_wait_for_db.sh
        content: |
          echo "Waiting for the database to be ready..."
          /opt/OV/ServiceActivator/bin/ActivatorConfig -waitForDB {{activator_wait_for_db_timeout}}
    - name: Complete CRModel solution deployment
      command: >
        /opt/OV/ServiceActivator/bin/deploymentmanager DeploySolution
        -solutionName CRModel
        -dbUser {{activator_db_user}}
        -dbPassword {{activator_db_password}}
        -createTables
        -conditionalDB
        -overwriteAllOnConflict
        -onlyDB
        {% if activator_rolling_upgrade|bool %}
        -rollingUpgrade
        {% endif %}
    - include_role: name=solutions-deploy
    - include_role: name=asr-solution-config
      when: install_asr|bool
    - include_role: name=dde-deploy-specs
      when: dde_load_specs|bool
